<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Education | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/education/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2013-04-18T21:07:41-05:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Elegant Code]]></title>
    <link href="http://RayHightower.com/blog/2013/04/12/elegant-code/"/>
    <updated>2013-04-12T13:34:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/04/12/elegant-code</id>
    <content type="html"><![CDATA[<p>This quote is too long to tweet, but too good to pass up:</p>

<blockquote><p>Ugly programs are like ugly suspension bridges: they're much more liable to collapse than pretty ones, because the way humans (especially engineer-humans) perceive beauty is intimately related to our ability to process and understand complexity. A language that makes it hard to write elegant code makes it hard to write good code.</p>

<p>~Eric S. Raymond, Author of The Cathedral and the Bazaar</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Challenges Make Us Stronger]]></title>
    <link href="http://RayHightower.com/blog/2013/03/25/challenges-make-us-stronger/"/>
    <updated>2013-03-25T09:37:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/03/25/challenges-make-us-stronger</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/moth.png" width="300" height="215" align="right" title="Emperor moth photo by Dean Morley" alt="Emperor moth photo by Dean Morley">
A man found a cocoon of an emperor moth. He took it home so that he could watch the moth come out of the cocoon. On the day a small opening appeared, he sat and watched the moth for several hours as the moth struggled to force its body through that little hole.</p>

<p>Then it seemed to stop making any progress. It appeared as if it had gotten as far as it could and it could go no farther. It just seemed to be stuck.</p>

<!--more-->


<h4>Kindness</h4>

<p>Then the man, in his kindness, decided to help the moth, so he took a pair of scissors and snipped off the remaining bit of the cocoon. The moth then emerged easily. But it had a swollen body and small, shriveled wings. The man continued to watch the moth because he expected that, at any moment, the wings would enlarge and expand to be able to support the body, which would contract in time. Neither happened! In fact, the little moth spent the rest of its life crawling around with a swollen body and shriveled body and shriveled wings. It never was able to fly.</p>

<h4>Helping vs. Understanding</h4>

<p>What the man in his kindness and haste did not understand was that the restricting cocoon and the struggle required for the moth to get through the tiny opening was the way of forcing fluid from the body of the moth into its wings so that it would be ready for flight once it achieved its freedom from the cocoon. Freedom and flight would only come after the struggle. By depriving the moth of a struggle, he deprived the moth of health.</p>

<h4>Obstacles and Growth</h4>

<p>Sometimes struggles are exactly what we need in our life. If we were to go through our life without any obstacles, we would be crippled. We would not be as strong as what we could have been. Give every opportunity a chance, and leave no room for regrets.</p>

<p><em>The author of this article is unknown. Emperor moth photo by <a href="http://www.flickr.com/photos/33465428@N02/7015602897/">Dean Morley</a></em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Can Do It Now]]></title>
    <link href="http://RayHightower.com/blog/2013/03/13/you-can-do-it-now/"/>
    <updated>2013-03-13T15:31:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/03/13/you-can-do-it-now</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/do_it_now.jpg" align="right" width="200" height="296" alt="You Can Do It Now" title="You Can Do It Now">
If you are fortunate enough to work in the technology industry, you do not need permission to move forward. So do it now.</p>

<p>Yes, you will have to define <em>it</em> for yourself.</p>

<h4>ChiPMA – Product Management</h4>

<p>A few years ago I had the pleasure of hearing <a href="http://www.youtube.com/watch?v=igsvMAU5POY">Suneel Gupta</a> speak at a Chicago Product Management Association meeting hosted by Pathfinder Development. Three points raised during Gupta’s talk:</p>

<ul>
<li>Conditions are never perfect. So start now.</li>
<li>What does <em>start</em> mean? Figure that out, and draw out the plan.</li>
<li>If you suck at first, keep going.</li>
<li>Conditions are never perfect.</li>
</ul>


<!-- more -->


<h4>Learning From History</h4>

<p>Gupta is a student of history. He began the talk by drawing parallels between today’s startup culture and the early days of powered flight.</p>

<p>In the late 1800s, Samuel Pierpont Langley was an accomplished engineer with great connections to money and resources. One of his lifelong goals was to develop a vehicle for powered flight. He built several successful models, hired the smartest collaborators he could find, and he even raised $50k (in 1898 dollars) from investors. Newspaper reporters followed his entourage as they conducted experiments. Surely, this team of thoroughbreds would solve the flight puzzle.</p>

<p>But most people have never heard of Langley. Somewhere in Ohio, far from the news outlets of the day, the Wright Brothers achieved the goal first. When Langley heard the news, he stopped trying.</p>

<p>Why did the Wright Brothers win? They never waited for perfect conditions. The Wright Brothers did what they could with the resources they had at the time. Maybe constraints are advantages in disguise.</p>

<h4>Draw Out the Plan</h4>

<p>Everybody has dreams. Something magical happens when we take the time to map out our dreams on paper.</p>

<p>Gupta’s example: Jack Dorsey, creator of Twitter. Dorsey drew the first mock-up for Twitter on paper. And then he showed it to people. Some laughed. Many gave feedback. He used the feedback to hone the idea into a viable product.</p>

<p>Until you put the idea on paper (or some other medium) so you can show it to potential customers and collaborators, you’ll never get the feedback you need to improve.</p>

<h4>Keep Going</h4>

<p>Gupta and his brother had an idea. They wanted to create videos about the first wave of Indians to move to America. They approached Hollywood experts about creating the videos.</p>

<p>"You’ll need at least $1 million," they were told. Much too expensive. Most people fold when facing a million dollar wall.</p>

<p>But Suneel and his brother made their own videos with the equipment they had available. The videos were not million-dollar productions. But here’s the upside: When they were done, they had something of substance that they could show to people. They posted their work at <a href="http://kahanimovement.com">KahaniMovement.com</a>. One viewer liked the site enough to send a link to Steven Spielberg.</p>

<p>Spielberg viewed the videos and he gave the brothers clear, actionable feedback. They made improvements. And they learned something interesting about Spielberg in the process: Even Spielberg starts with a loose cut sometimes! When Spielberg has a fresh idea that he’s trying to communicate, he will grab a hand-held camera, shoot the idea (no matter how rough) and show it to his team. If a picture is a thousand words, then a video is… you get the idea.</p>

<h4>Teachers &amp; Parents Ignite Our Passion</h4>

<p>Gupta shared a story about his 7th grade social studies class. The class watched a film of JFK delivering his inaugural speech in 1960. Gupta was moved. At the end of the film, the teacher informed that class that JFK had not written the speech. The author was Ted Sorensen, a man whom Kennedy called his <em>intellectual blood bank</em>.</p>

<p>In 7th grade, Gupta had found his calling. He would become a speech writer.</p>

<p>He went home and told his mother about his decision to become a speech writer. And that’s when his mother gave him a powerful piece of advice: "If you want to do that, you don’t have to wait. You can do it now."</p>

<p>You can do it now. What are you waiting for?</p>

<p><em>A version of this article was originally posted at <a href="http://wisdomgroup.com">http://wisdomgroup.com</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Technology and God]]></title>
    <link href="http://RayHightower.com/blog/2013/03/03/technology-and-god/"/>
    <updated>2013-03-03T14:00:00-06:00</updated>
    <id>http://RayHightower.com/blog/2013/03/03/technology-and-god</id>
    <content type="html"><![CDATA[<p>Reflecting on a quote I became aware of recently:</p>

<blockquote><p>Technology is a gift of God. After the gift of life it is perhaps the greatest of God's gifts. It is the mother of civilizations, of arts and of sciences.</p>

<p>~Freeman Dyson, English Physicist</p></blockquote>

<p>Well said, Freeman Dyson. Praise God for technology.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-C Programming: The Big Nerd Ranch Guide]]></title>
    <link href="http://RayHightower.com/blog/2013/02/28/objective-c-programming-the-big-nerd-ranch-guide/"/>
    <updated>2013-02-28T15:52:00-06:00</updated>
    <id>http://RayHightower.com/blog/2013/02/28/objective-c-programming-the-big-nerd-ranch-guide</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/objective-c-big-nerd.png" align="right" width="250" height="357" alt="Objective-C Programming - The Big Nerd Ranch Guide" title="Objective-C Programming - The Big Nerd Ranch Guide"></p>

<blockquote><p>You will be baffled from time to time… Stick with this book. I promise the bewilderment will cease before you get to the final page.<br/>~ Aaron Hillegass, Author</p></blockquote>

<h4>Finding the Right Objective-C Book</h4>

<p>I've gone through several Objective-C books in my quest to master <a href="/blog/2012/10/29/building-ios-apps-with-ruby-motion/">RubyMotion</a>. You read that right: I'm learning Objective-C so that I can master RubyMotion. <em>Objective-C Programming: The Big Nerd Ranch Guide</em> is one book that clicks for me. Here's why.</p>

<!-- more -->


<ul>
<li><p>Minimal fluff. Other Objective-C books start off with speeches about why a dev should write for iOS. What a waste of paper. The Big Nerd approach: Start with a few paragraphs about C, and then jump right in to Xcode installation followed by "Hello World." Refreshingly direct.</p></li>
<li><p>Clear examples. As I immerse myself deeper into the world of Objective-C, I am troubled by much of the documentation. It's okay to describe a method signature, but a description with an example is much better. While reading other Objective-C books, I found myself pausing to search Stack Overflow for alternate explanations. The Big Nerd book is better because everything is self-contained. Method descriptions are followed by clear examples.</p></li>
<li><p>Zero Assumptions. Even though the book contains minimal fluff, readers will appreciate how the author defines terms throughout the text. For example, the book does not assume that the reader knows the classroom definition of the word <em>syntax</em>. It defines the word explicitly:</p></li>
</ul>


<blockquote><p>Syntax is the set of rules that governs how your code must be written in a given programming language. These rules are extremely specific, and if you fail to follow them, your program won't work.</p></blockquote>

<p>Clearly put!</p>

<h4>Do I Really Need Objective-C?</h4>

<p>Yes. If you want to be effective with RubyMotion, you must grow strong with Objective-C.</p>

<p>The RubyMotion devs whom I admire most also know Objective-C. Devs like Matt Aimonetti (creator of BubbleWrap), Randall Thomas and Tammer Saleh (authors of <em>RubyMotion in the Cloud</em>), Jonathan Penn (instructor/speaker at CocoaConf) and Laurent Sansonetti (creator of RubyMotion) move seamlessly between the worlds of Ruby and Objective-C. Luke became a Jedi because he followed in the footsteps of Yoda.</p>

<p>More important than following the masters: Learning from their triumphs and mistakes by reading their code. Developers in 2013 are fortunate to have tools like GitHub where code is shared on a massive scale. Most iOS code is written in Objective-C. If we want to learn from the iOS code that has been written before, we need to know Objective-C.</p>

<h4>Highly Recommended</h4>

<p>If you want to develop apps for iOS devices, start with <em>Objective-C Programming: The Big Nerd Ranch Guide</em>. The book is also helpful if you prefer RubyMotion over Objective-C.</p>

<p>And don't forget your <a href="/blog/2012/09/03/10000-hours-of-practice/">10,000 Hours of Practice</a>.</p>
]]></content>
  </entry>
  
</feed>
