<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2013-01-08T11:41:03-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building iOS Apps With RubyMotion]]></title>
    <link href="http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/"/>
    <updated>2012-10-29T18:49:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion</id>
    <content type="html"><![CDATA[<p>Special thanks to the organizers of <a href="http://magic-ruby.com/">MagicRuby</a> and <a href="http://aloharubyconf.com/">Aloha Ruby</a> for inviting me to present RubyMotion at their respective conferences. <a href="http://confreaks.com/videos/1245-aloharuby2012-building-ios-apps-with-rubymotion">Confreaks</a> recorded video at the Aloha Ruby event.</p>

<center>
<iframe name="rubymotionaloha" width="560" height="315" src="http://www.youtube.com/embed/3gCsen5Zs4s" frameborder="0" allowfullscreen></iframe>
</center>


<p>The fizzbuzz sample code can be found on <a href="https://github.com/RayHightower/fizzbuzzrm">GitHub</a>. Slides are on <a href="https://speakerdeck.com/rayhightower/building-ios-apps-with-rubymotion">SpeakerDeck</a>.</p>

<p>Should you use RubyMotion or Objective-C for iOS development? That depends...</p>

<!--more-->


<p>If your team is currently building web apps, and they happen to be Ruby-focused, then RubyMotion will enable you to create a <a href="http://rayhightower.com/blog/2012/08/31/four-steps-five-minutes/">minimum viable product (MVP)</a> using skills that you already have in-house. However, if your team is currently Objective-C focused, it may be easier for you to build your MVP in Objective-C.</p>

<p>Keep in mind that I am Ruby-biased, so I see advantages on the RubyMotion side of the question. Building the web <em>and</em> mobile pieces of an app in the same language means that expertise can be readily shared throughout the team. Shared expertise makes the team stronger.</p>

<p>Thanks again to MagicRuby and Aloha Ruby for asking me to speak, and to Confreaks for recording the talk.</p>
]]></content>
  </entry>
  
</feed>
