<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RayHightower.com]]></title>
  <link href="http://RayHightower.com/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2012-11-09T23:47:54-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make Your Competition Irrelevant]]></title>
    <link href="http://RayHightower.com/blog/2012/11/10/make-your-competition-irrelevant/"/>
    <updated>2012-11-10T02:55:00-06:00</updated>
    <id>http://RayHightower.com/blog/2012/11/10/make-your-competition-irrelevant</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/assets/blue_ocean_strategy.png" align="right"></p>

<h4>Path to Victory</h4>

<p>A skillfully executed business strategy is one path to victory. Many strategy books will tell business owners how to win at the expense of the competition, how to take market share away from the competition, and so on.</p>

<p>The book Blue Ocean Strategy proposes a non-typical path to victory over the competition. According to the authors, following a blue ocean strategy will make your competition irrelevant.</p>

<!--more-->


<h4>Competitive Red Oceans</h4>

<p>First, some definitions. The authors divide the business world into two oceans: red and blue. Red oceans are markets where competition is stiff and companies battle fiercely. The ocean is red with the blood of business gladiators who cut each other to shreds with competing offerings. Margins tend to be low because customers have many identical options to choose from. Customers view red ocean products as commodities.</p>

<h4>Undiscovered Blue Oceans</h4>

<p>But blue oceans are undiscovered markets. Blue ocean companies offer products and services that are so full of value that customers pay premium prices for the better value. Competition is scarce (and the water remains blue) because blue ocean markets tend to be new. Few companies have figured out how to find the blue ocean. Customers are pleased because blue ocean offerings contain features beyond those found in typical (red ocean) products. Customers willingly pay higher prices for the increased value found in blue ocean products.</p>

<blockquote><p>Blue ocean products deliver more value, therefore customers are
willing to pay more to have them.</p></blockquote>

<h4>Example: Red Ocean Circus</h4>

<p>Say the word “circus” to a person of a certain age and they will immediately think “Ringling Brothers.” The Ringling Brothers Barnum &amp; Bailey Circus owned the American circus market for decades. Small regional players competed for crumbs. But by the 1980’s, circus audiences were shrinking and even Ringling Brothers had trouble keeping pace. Kids who once begged their parents for circus tickets wanted the latest computer games instead. The market, as a whole, was struggling for new customers and revenue was on the decline.</p>

<p>To make matters worse, expenses were increasing. Animals eat every day and food prices continue to rise. Animals require trainers, and trainers require salaries. Circus “stars” demand star treatment in an industry where the customers, accustomed to Hollywood celebrities, no longer find the stars of the circus impressive.</p>

<p>In short, the circus industry was a red ocean. Revenue was on the decline as costs continued to rise. Profits were squeezed.</p>

<h4>Blue Ocean Circus</h4>

<p>But a Montreal street performer had a bold new idea. Create a new kind of circus. Eliminate animals and eliminate the cost of feeding them. Avoid “star” performers in favor of an ensemble cast including former Olympic athletes. Direct the marketing focus toward a completely new clientele: adults instead of kids. Recognize that adult customers will pay more money for a higher level of entertainment. Build elements of high-end entertainment (such as Broadway theatre) into the new “circus.”</p>

<p>The result: A brand new blue ocean in the form of Cirque du Soleil. The Montreal street performer, Guy Laliberte, achieved billionaire status through his new blue ocean. Another benefit: Customers willingly travel to places like Las Vegas to see Cirque du Soleil. So performers spend less time on the road than they would with a “traditional” circus. Performers enjoy a higher quality of life because they spend less time away from home and more time with their families. Some benefits, like this, are more important than any financial upside.</p>

<h4>Another Red Ocean: Intimidating Wine</h4>

<p>Wine drinkers know that the process appears intimidating and pretentious to the novice buyer. Personally, I know little of the industry jargon: I’ve picked up words like “vintage” and “legs” but beyond that, I’m clueless. And I’m not alone. An Australian wine company, Casella Wines, discovered that millions of prospective customers were as clueless as me.</p>

<h4>Blue Ocean: Inviting Wine</h4>

<p>Casella wines decided to challenge the entire industry with a brand new wine, [yellow tail]. Casella could have sold its product to the existing population of wine buyers (red ocean). However, strategists at the company tapped latent demand for wine among non-wine buyers, people who avoided wine because they didn’t want to learn all the mumbo jumbo. People like beer drinkers, a market three times the size of wine drinkers. So [yellow tail] was marketed without all of the typical focus on vintages, years, etcetera.</p>

<p>The result: [yellow tail] discovered a blue ocean of new customers. People who had rarely bought wine before began to buy [yellow tail]. Yes, [yellow tail] wooed customers away from their competitors, but it’s more important to note that they grew the entire wine market. The new brand continues to grow aggressively in an industry previously thought to be mature.</p>

<h4>Red Oceans and Old Rules</h4>

<p>If you’re running an aggressive company, and the market has already been defined by your competitors, you are operating in a red ocean. Who says you need to compete there? Why play a game created and dominated by your competitors? Successful blue ocean companies never battle incumbents head-on. They re-write the rules.</p>

<h4>The Next Blue Ocean: Where?</h4>

<p>If blue oceans are so great, where do we find them? What industries offer the best blue ocean opportunities? Which companies are best at finding blue oceans in existing industries?</p>

<p>Through their study of many industries and companies, the authors learned that there are no permanently excellent companies, and no permanently excellent industries. Blue ocean examples can be found in mature (or presumed dead) industries such as circus entertainment and dinner wine. One key to discovering the next blue ocean is something called value innovation.</p>

<h4>Value Innovation</h4>

<p>Value innovation is delivering a product or service in a manner that is both creative and relevant to the customer.</p>

<p>Value without innovation leads to minor incremental improvement. In the circus example, adding more animals might add value, but only in a same-old-stuff kind of way.</p>

<p>Innovation without value tends to be futuristic. Technology for technology’s sake. Although customers may find the innovation fascinating, they won’t pay for it without value. An example: Personal computers in the 1970’s. PCs were innovative, but they didn’t deliver value until the creation of useful business applications like electronic spreadsheets (Lotus 1-2-3, Microsoft Excel) and email.</p>

<p>Value innovation is a fruitful marriage between value and innovation. It’s delivering something creative that customers care about and will pay for. Value innovation is not necessarily cutting edge. Elements of Cirque du Soleil are seen in other forms of entertainment. [yellow tail] is not the first wine ever sold.</p>

<p>Rather, both of these examples combine value and innovation in creative ways. Each attracts new customers (adults, non-wine drinkers), eliminates things that add no value (animals, intimidation &amp; pretentiousness), and add elements that customers are willing to pay for (drama, fun beverages).</p>

<h4>That’s Not All</h4>

<p>A two-page newsletter cannot cover everything in Blue Ocean Strategy. The authors, W. Chan Kim and Renee Mauborgne, include many more example companies and frameworks for navigating your company to the next blue ocean.</p>

<h4>Caution: Have a Plan</h4>

<p>He who ventures beyond his current red ocean without a plan will wind up in a puddle. The authors caution against pursuing blue oceans based on gut instinct. Have a plan, and wear a life vest!</p>

<p><em>Note: A version of this post originally appeared on the <a href="http://wisdomgroup.com">WisdomGroup Blog</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building iOS Apps With RubyMotion]]></title>
    <link href="http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/"/>
    <updated>2012-10-29T18:49:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion</id>
    <content type="html"><![CDATA[<p>Special thanks to the organizers of <a href="http://magic-ruby.com/">MagicRuby</a> and <a href="http://aloharubyconf.com/">Aloha Ruby</a> for inviting me to present RubyMotion at their respective conferences. <a href="http://confreaks.com/videos/1245-aloharuby2012-building-ios-apps-with-rubymotion">Confreaks</a> recorded video at the Aloha Ruby event.</p>

<center>
<iframe width="560" height="315" src="http://www.youtube.com/embed/3gCsen5Zs4s" frameborder="0" allowfullscreen></iframe>
</center>


<p>The fizzbuzz sample code can be found on <a href="https://github.com/RayHightower/fizzbuzzrm">GitHub</a>. Slides are on <a href="https://speakerdeck.com/rayhightower/building-ios-apps-with-rubymotion">SpeakerDeck</a>.</p>

<p>Should you use RubyMotion or Objective-C for iOS development? That depends&#8230;</p>

<!--more-->


<p>If your team is currently building web apps, and they happen to be Ruby-focused, then RubyMotion will enable you to create an <a href="http://rayhightower.com/blog/2012/08/31/four-steps-five-minutes/">minimum viable product (MVP)</a> using skills that you already have in-house. However, if your team is currently Objective-C focused, it may be easier for you to build your MVP in Objective-C.</p>

<p>Keep in mind that I am Ruby-biased, so I see advantages on the RubyMotion side of the question. Building the web <em>and</em> mobile pieces of an app in the same language means that expertise can be readily shared throughout the team. Shared expertise makes the team stronger.</p>

<p>Thanks again to MagicRuby and Aloha Ruby for asking me to speak, and to Confreaks for recording the talk.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using RubyMotion With Xcode's Interface Builder]]></title>
    <link href="http://RayHightower.com/blog/2012/10/18/using-rubymotion-with-interface-builder/"/>
    <updated>2012-10-18T18:34:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/10/18/using-rubymotion-with-interface-builder</id>
    <content type="html"><![CDATA[<h4>Executive Summary</h4>

<p><a href="http://www.rubymotion.com/">RubyMotion</a> is a Mac application that lets developers write iOS apps in
Ruby. It&#8217;s possible to create the user interface for the app entirely
within RubyMotion or with a Ruby gem like <a href="https://github.com/rubymotion/teacup">Teacup</a>. But what about devs who prefer Interface Builder?</p>

<p>This article will show how to use Xcode&#8217;s Interface Builder to create a basic UI for
a RubyMotion application.</p>

<!-- more -->


<p><img src="http://RayHightower.com/assets/fizzbuzzrm.png" width = "200" align = "right"
alt="Interface Builder with RubyMotion" title="Interface Builder with RubyMotion"></p>

<h4>Our Sample App: FizzBuzz</h4>

<p>For this example we will build an iOS app that calculates and displays
the fizzbuzz function. As a refresher, here&#8217;s the fizzbuzz algorithm:</p>

<ol>
<li>Count integers starting with 1 and incrementing as high as the user wants to go.</li>
<li>If the integer to be displayed is a multiple of 3, display &#8220;fizz&#8221; instead.</li>
<li>If the integer to be displayed is a multiple of 5, display &#8220;buzz&#8221; instead.</li>
<li>If the integer to be displayed is a multiple of both 3 and 5 (i.e. a multiple of 15) display &#8220;fizzbuzz&#8221;.</li>
</ol>


<p>The bare-bones UI appears at right. The plus sign increments the
counter, minius decrements it, and the label area shows &#8220;Begin&#8221; at
the beginning.</p>

<h4>First, Build the RubyMotion App</h4>

<p>We start by building the fizzbuzz app in RubyMotion.</p>

<p><code>
$ motion create fizzbuzzrm
</code></p>

<p>The code for the finished app can be found on <a href="http://github.com/rayhightower/fizzbuzzrm">GitHub</a>.</p>

<h4>Build the UI in Interface Builder</h4>

<p>Next, build the UI in Xcode&#8217;s Interface Builder.</p>

<p>After completing the interface, we will need to asign tags to each
element so that the UI knows how to communicate with RubyMotion. Scroll
down to View|Tag in the rightmost colum (screenshot below). In this
example, I assigned the tags 1, 2, 3, and 4 to the label, plus button,
minus button, and reset, respectively.
<img src="http://RayHightower.com/assets/tag1.png" alt="Interface Builder With RubyMotion" title="Interface Builder with RubyMotion"></p>

<p>Save the IB file in the <code>/resources</code> directory of your
RubyMotion project. In my example, I called the file
<code>fbib.xib</code>. RubyMotion will compile the .xib file next time
you run the rake command to build the app.</p>

<h4>Connecting the .xib file to the RubyMotion App</h4>

<p>Let&#8217;s head back to the RubyMotion app so we can tell RubyMotion how to
interact with the IB file. Note that we specify the name of the IB file
on the second line of the <code>loadView</code> method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">loadView</span>
</span><span class='line'>    <span class="n">views</span> <span class="o">=</span> <span class="no">NSBundle</span><span class="o">.</span><span class="n">mainBundle</span><span class="o">.</span><span class="n">loadNibNamed</span> <span class="s2">&quot;fbib&quot;</span><span class="p">,</span> <span class="n">owner</span><span class="ss">:self</span><span class="p">,</span> <span class="n">options</span><span class="ss">:nil</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">view</span> <span class="o">=</span> <span class="n">views</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@counter</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="vi">@view_handle</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">view</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>viewDidLoad</code> method is where we assign buttons to their corresponding
methods, and we specify how the app should behave when each button is
pressed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">viewDidLoad</span>
</span><span class='line'>    <span class="vi">@label</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">viewWithTag</span> <span class="mi">1</span>
</span><span class='line'>    <span class="n">plus_button</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">viewWithTag</span> <span class="mi">2</span>
</span><span class='line'>    <span class="n">minus_button</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">viewWithTag</span> <span class="mi">3</span>
</span><span class='line'>    <span class="n">reset_button</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">viewWithTag</span> <span class="mi">4</span>
</span><span class='line'>    <span class="c1"># background_area = view.viewWithTag 5</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">plus_button</span><span class="o">.</span><span class="n">addTarget</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">action</span><span class="ss">:&#39;plusTapped:&#39;</span><span class="p">,</span> <span class="n">forControlEvents</span><span class="ss">:UIControlEventTouchUpInside</span><span class="p">)</span>
</span><span class='line'>    <span class="n">minus_button</span><span class="o">.</span><span class="n">addTarget</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">action</span><span class="ss">:&#39;minusTapped:&#39;</span><span class="p">,</span> <span class="n">forControlEvents</span><span class="ss">:UIControlEventTouchUpInside</span><span class="p">)</span>
</span><span class='line'>    <span class="n">reset_button</span><span class="o">.</span><span class="n">addTarget</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="n">action</span><span class="ss">:&#39;resetTapped:&#39;</span><span class="p">,</span> <span class="n">forControlEvents</span><span class="ss">:UIControlEventTouchUpInside</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># background_area.addTarget(self, action:&#39;backgroundTapped:&#39;, forControlEvents:UIControlEventTouchUpInside)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And finally, let&#8217;s define a method for each button.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">plusTapped</span><span class="p">(</span><span class="n">sender</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@counter</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vi">@label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="no">FizzBuzzViewController</span><span class="o">.</span><span class="n">fbcalc</span><span class="p">(</span><span class="vi">@counter</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">minusTapped</span><span class="p">(</span><span class="n">sender</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@counter</span> <span class="o">-=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="vi">@label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="no">FizzBuzzViewController</span><span class="o">.</span><span class="n">fbcalc</span><span class="p">(</span><span class="vi">@counter</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">resetTapped</span><span class="p">(</span><span class="n">sender</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@counter</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="vi">@label</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s2">&quot;Begin&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">rotate_background</span><span class="p">(</span><span class="vi">@view_handle</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">rotate_background</span><span class="p">(</span><span class="n">view_handle</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@color_index</span> <span class="o">||=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">case</span> <span class="vi">@color_index</span>
</span><span class='line'>    <span class="k">when</span> <span class="mi">0</span>
</span><span class='line'>      <span class="vi">@view_handle</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="no">UIColor</span><span class="o">.</span><span class="n">redColor</span>
</span><span class='line'>    <span class="k">when</span> <span class="mi">1</span>
</span><span class='line'>      <span class="vi">@view_handle</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="no">UIColor</span><span class="o">.</span><span class="n">greenColor</span>
</span><span class='line'>    <span class="k">when</span> <span class="mi">2</span>
</span><span class='line'>      <span class="vi">@view_handle</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="no">UIColor</span><span class="o">.</span><span class="n">blueColor</span>
</span><span class='line'>    <span class="k">when</span> <span class="mi">3</span>
</span><span class='line'>      <span class="vi">@view_handle</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="no">UIColor</span><span class="o">.</span><span class="n">yellowColor</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@color_index</span> <span class="o">=</span> <span class="p">(</span><span class="vi">@color_index</span> <span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="mi">4</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Rake</h4>

<p>Run <code>$ rake</code> to compile and execute the app.</p>

<p>Note the surprise when you hit the Reset button in the app. This
surprise is one reason why you should always have a designer on your
dev team!</p>

<h4>Conclusion</h4>

<p>The more familiar I become with RubyMotion, the more I learn that there
are multiple ways to do things, especially when it comes to UI. If you
have ideas or suggestions for a different approach, feel free to dash
me a message through the <a href="http://RayHightower.com/contact">Contact Form</a>. Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clear Innovation]]></title>
    <link href="http://RayHightower.com/blog/2012/10/06/clear-innovation/"/>
    <updated>2012-10-06T22:47:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/10/06/clear-innovation</id>
    <content type="html"><![CDATA[<p>Some organizations are innovative, while others are just lucky. How can you tell the difference? I would submit that longevity is a great divider between true innovators and those who are just lucky. An organization that generates new ideas time after time breaks the statistical rules that define luck. These are the organizations worthy of study.</p>

<!-- more -->


<h4>150+ Years of Innovation</h4>

<p>Corning entered the glass business over 150 years ago. At that time, the art of glassmaking had remained largely unchanged since the time of the Roman Empire. Glassmaking was a craft, an art handed down from father to son for generations, and glassmaking techniques were closely guarded secrets.</p>

<p>Corning changed that. Corning introduced science to glassmaking. Over the past century and a half they have experimented extensively and documented thoroughly. The results are glass innovations we see today, such as:</p>

<ul>
<li>Fiber optic cables that shuttle gigabits of data throughout today’s Internet.</li>
<li>Large, flat-panel computer displays that use less power than older monitors while reducing eye-strain.</li>
</ul>


<p>To explore innovation at Corning, we’ll take a closer look at a few Corning innovations from the 1800s and 1900s that are still in use today: stones in the glass, the ribbon machine, and joint ventures.</p>

<h4>Stones in the Glass</h4>

<p>Glassmakers melt silicon and pour (or blow) it into molds to create useful shapes. That’s an oversimplification, but it serves the purposes of this article. Glass melts at very high temperatures. One big challenge faced by any glassmaker: building a furnace that won’t melt. If the heat of the molten glass melts the furnace, the product and furnace are both destroyed.</p>

<p>In the early 1900s Corning searched aggressively for a high-temperature furnace material. Researchers believed that new and interesting glass products could be discovered at higher temperatures.</p>

<p>One day, after a fresh batch of glass had cooled, the Corning researchers noticed something disturbing: stones in the glass. Somehow, impurities had crept into the molten glass and when the glass hardened, the impurities were trapped inside.</p>

<h4>Problem or Opportunity?</h4>

<p>The stones in the glass appeared to be a problem until the researchers thought about things from a different perspective. The stones were intact. Whatever the “stones” were made of, they were resilient enough to remain intact while the glass was melted. If the researchers could isolate this material, they might be able to use it to build high-temperature furnaces. The researchers managed to isolate the newly discovered material, and it served as a lining for Corning’s furnaces for many decades after that. Pyrex, the glass that chemists take for granted today, was born in the new high-temperature furnaces.</p>

<h4>General Electric Needed Bulbs</h4>

<p>Thomas Edison’s General Electric Company was an early customer of Corning. Edison needed an enclosure for his new electric lights. Glass seemed to fit the bill.</p>

<p>At the time, glass bulbs for Edison’s new lights were blown by hand. This presented a problem as the demand for light bulbs increased because Corning couldn’t find enough human glass blowers to blow the bulbs fast enough. Further, when humans create simple, specialized products there are always slight variations in quality and dimensions that may render the product unusable.</p>

<p>So the Corning engineers had a new problem to solve. How could they make bulbs faster and with the right dimensions every time?</p>

<h4>Making Light Bulbs</h4>

<p>The Corning engineers first attacked the problem by studying how the glass blowers blew the bulbs. Then they tried to duplicate the human process with machines. The result: Failure.</p>

<h4>Birds vs. Airplanes</h4>

<p>Early airplane designers experienced the same kind of failure when they first tried to fly. They tried to mimic the wings and flapping motion of birds, and the result was failure.</p>

<p>However, the Wright brothers achieved flight because they looked at the problem from a different perspective. Keep the wings still, and move the air with an engine. Birds don’t fly that way. But today, that’s the way that millions of people fly around the world every day. Airplanes don’t mimic birds. They take a different approach, and they fly higher and faster as a result.</p>

<h4>The Ribbon Machine</h4>

<p>Back to making light bulbs. The engineers took a new approach. They threw out everything they knew about light bulb craftsmanship, and they started from scratch. The result was the ribbon machine, a device capable of producing bulbs at the rate of over fifty thousand units per hour. The ribbon machine was Corning’s key machine for making light bulbs for over six decades.</p>

<h4>Human Skills Needed</h4>

<p>Didn’t the ribbon machine put glassblowers out of work? Actually, no. Glassblowers were given other tasks that required special human skills. Through most of the innovations in glass technology, Corning maintained good relationships with the craftsmen and artists who fashioned the glass. Skilled workers in other industries rebelled against innovation because they feared losing their jobs to new machines. Corning’s artisans embraced the new technology because the company had other more advanced tasks for them to perform within the company. The more mundane tasks were relegated to machines.</p>

<h4>Joint Ventures</h4>

<p>Corning competes with glass companies many times its size. The company’s strength lies in its ability to create intellectual property and to profit from it. Other companies recognize this strength and they readily partner with Corning in joint ventures. Dow-Corning and Owens-Corning are two examples. The Corning company figured out how to establish and maintain positive relationships with other companies long before the term “joint venture” was coined.</p>

<p>One reason for Corning’s attractiveness as an innovation partner is their stubborn insistence on investing in research and development, regardless of economic outlook. Many companies look at R&amp;D as something to cut when times get tough. But for Corning, investing in R&amp;D is part of their DNA. As a result, Corning always has something to offer when other firms come looking for a JV partner.</p>

<h4>Conclusion</h4>

<p>The Corning story is remarkable not only because of their recent innovations (fiber optics, LCD panels). Corning has consistently functioned as an innovation factory through two world wars and multiple CEOs. The light bulb, telephone, radio, television, airplane, and computer have all received a boost from Corning’s innovation engine. Corning consistently plays a role in the history of this country and the world. What a powerful source of inspiration.</p>

<h4>Suggested Reading</h4>

<p><em>Corning and the Craft of Innovation</em>, by Margaret B. W. Graham and Alec Shuldiner.</p>

<p><em>Note: A version of this post was originally published at <a href="http://wisdomgroup.com">WisdomGroup.com</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Theodore Roosevelt's Arena]]></title>
    <link href="http://RayHightower.com/blog/2012/09/15/theodore-roosevelt-and-the-arena/"/>
    <updated>2012-09-15T08:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/09/15/theodore-roosevelt-and-the-arena</id>
    <content type="html"><![CDATA[<p>This is one of my favorite quotes from TR. Pardon the bias toward the
male gender. This was written in the early 1900s.</p>

<blockquote>
<p>It is not the critic who counts, not the man who points out how the
strong man stumbled or where the doer of deeds could have done
better.</p>
<p>The credit belongs to the man who is actually in the arena; whose face
is marred by dust and sweat and blood; who strives valiantly; who errs
and comes short again and again; who knows the great enthusiasms, the
great devotions, and spends himself in a worthy cause; who, at the best,
knows in the end the triumph of high achievement; and who, at the worst,
if he fails, at least fails while daring greatly, so that his place
shall never be with those cold and timid souls who know neither victory
nor defeat.</p>
~Theodore Roosevelt
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10,000 Hours of Practice]]></title>
    <link href="http://RayHightower.com/blog/2012/09/03/10000-hours-of-practice/"/>
    <updated>2012-09-03T00:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/09/03/10000-hours-of-practice</id>
    <content type="html"><![CDATA[<p>In the book <em>Outliers</em>, author Malcolm Gladwell observes that it takes roughly ten thousand hours of practice to achieve mastery in a field. How does Gladwell arrive at this conclusion? And, if the conclusion is true, how can we leverage this idea to achieve greatness in our professions?</p>

<p>Gladwell studied the lives of extremely successful people to find out how they achieved success. This article will review a few examples from Gladwell’s research, and conclude with some thoughts for moving forward.</p>

<!-- more -->


<h4>Violins in Berlin</h4>

<p>In the early 1990s a team of psychologists in Berlin, Germany studied violin students. Specifically, they studied their practice habits in childhood, adolescence, and adulthood. All of the subjects were asked this question: “Over the course of your entire career, ever since you first picked up the violin, how many hours have you practiced?”</p>

<p>All of the violinists had begun playing at roughly five years of age with similar practice times. However, at age eight, practice times began to diverge. By age twenty, the elite performers averaged more than 10,000 hours of practice each, while the less able performers had only 4,000 hours of practice.</p>

<p>The elite had more than double the practice hours of the less capable performers.</p>

<h4>Natural Talent: Not Important</h4>

<p>One fascinating point of the study: No “naturally gifted” performers emerged. If natural talent had played a role, we would expect some of the “naturals” to float to the top of the elite level with fewer practice hours than everyone else. But the data showed otherwise. The psychologists found a direct statistical relationship between hours of practice and achievement. No shortcuts. No naturals.</p>

<h4>Sneaking Out to Write Code</h4>

<p>You already know how Microsoft was founded. Bill Gates and Paul Allen dropped out of college to form the company in 1975. It’s that simple: Drop out of college, start a company, and become a billionaire, right? Wrong.</p>

<p>Further study reveals that Gates and Allen had thousands of hours of programming practice prior to founding Microsoft. First, the two co-founders met at Lakeside, an elite private school in the Seattle area. The school raised three thousand dollars to purchase a computer terminal for the school’s computer club in 1968.</p>

<p>A computer terminal at a <em>university</em> was rare in 1968. Gates had access to a terminal in <em>eighth grade</em>. Gates and Allen quickly became addicted to programming.</p>

<p>The Gates family lived near the University of Washington. As a teenager, Gates fed his programming addiction by sneaking out of his parents’ home after bedtime to use the University’s computer. Gates &amp; Allen acquired their10,000 hours through this and other clever teenage schemes. When the time came to launch Microsoft in 1975, the two were ready.</p>

<h4>Practice Makes Improvement</h4>

<p>In 1960, while they were still an unknown high school rock band, the Beatles went to Hamburg, Germany to play in the local clubs.</p>

<p>The group was underpaid. The acoustics were terrible. The audiences were unappreciative. So what did the Beatles get out of the Hamburg experience? Hours of playing time. Non-stop hours of playing time that forced them to get better.</p>

<p>As the Beatles grew in skill, audiences demanded more performances - more playing time. By 1962 they were playing eight hours per night, seven nights per week. By 1964, the year they burst on the international scene, the Beatles had played over 1,200 concerts together. By way of comparison, most bands today don’t play 1,200 times in their <em>entire career</em>.</p>

<h4>Falling in Love With Practice</h4>

<p>The elite don’t just work harder than everybody else. At some point the elites fall in love with practice to the point where they want to do little else.</p>

<p>The elite software developer is the programmer who spends all day pounding code at work, and after leaving work she writes open source software on her own time.</p>

<p>The elite football player is the guy who spends all day on the practice field with his teammates, and after practice he goes home to watch game films.</p>

<p>The elite physician listens to medical podcasts in the car during a long commute.</p>

<p>The elites are in love with what they do, and at some point it no longer feels like work.</p>

<h4>What’s Next?</h4>

<p>Now that we’ve reviewed the trends uncovered by Gladwell’s research, what can we do about it? All of us want to be great at something. Now that we know how other achievers have gotten there, what can we do to join their ranks?</p>

<p>One approach: We could choose a field and practice for 10,000 hours. If we are currently working in our target profession, forty hours per week over five years would give us ten thousand hours.</p>

<p>Or&#8230; We can look at the question in reverse. Where have we already logged 10,000 hours of practice? What is it that we do really well? What tasks do we perform so well that people ask: How did you do that? Sometimes when we fall in love with practice we don’t even recognize it!</p>

<p>If you’re running a company, what does your company do better than anybody else? What is it that the individual members of your company do better than anybody? How do you create an environment that gives everyone on your team the opportunity to practice?</p>

<h4>Conclusion</h4>

<p>Business is tough, especially now. Yet even in the midst of a challenging economy, there are individuals and companies that prosper beyond all expectations. Practice plays a major role in success.</p>

<h4>Suggested Reading</h4>

<p><em>Outliers</em>, by Malcolm Gladwell. Through interviews and statistical analysis, Gladwell determines why some people and organizations achieve success far beyond their peers.</p>

<p><em>Note: A version of this post was originally published at <a href="http://wisdomgroup.com">WisdomGroup.com</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Four Steps. Five Minutes.]]></title>
    <link href="http://RayHightower.com/blog/2012/08/31/four-steps-five-minutes/"/>
    <updated>2012-08-31T15:04:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/08/31/four-steps-five-minutes</id>
    <content type="html"><![CDATA[<p>Nine out of ten startups fail in the first year. Why? More important, what can we do to improve the odds? Entrepreneur Steve Blank might have an answer, expressed in his book <em>The Four Steps to the Epiphany</em>. Key points from the book are summarized here.</p>

<!-- more -->


<h4>Ignite Chicago</h4>

<p>This presentation was created for <a href="http://ignitechi.org">Ignite Chicago</a>. Ignite talks are special because speakers are required to present their thoughts in five minutes with slides that auto-advance every fifteen seconds. Thank you Stella Fayman and Tim Jahn for organizing the event.</p>

<center><iframe width="560" height="349" src="http://www.youtube.com/embed/uIYUTKP1pl8?rel=0" frameborder="0" allowfullscreen></iframe></center>


<h4>About the Author of <em>The Four Steps to the Epiphany</em></h4>

<p><a href="http://steveblank.com">Steve Blank</a> worked in, owned, or managed eight different silicon valley startups in the course of twenty years. His eighth startup was very successful; he was able to exit with enough money to retire. At that point, Blank began to reflect on the successes and failures of the various startups he had been involved with. Reflection led to lectures at Stanford, Berkeley, and Columbia. Notes from his lectures evolved into the book: <em>The Four Steps to the Epiphany</em>.</p>

<p>Blank noticed that startups went through predictable patterns of success or failure. Yes, there are multiple paths to failure, but there are fewer paths to success. Blank believes he has found a success path that applies to most startups.</p>

<h4>Counter Example: Webvan</h4>

<p>Sometimes it helps to explain an idea through counter example. <a href="http://en.wikipedia.org/wiki/Webvan">Webvan</a> was built to deliver groceries to people who ordered on the web. The problem? Webvan built software and warehouses before they had a reliable supply of customers. They were so confident of their future success that they spent close to one billion dollars building infrastructure. They ran out of money before they had customers.</p>

<p>It&#8217;s not fair to pick on Webvan when so many other companies make the same mistake. Remember the Apple Newton? Apple is a great company, but they put tons of money into an early PDA (the Newton) before customers even knew what a PDA was. Same with Motorola. Motorola’s Iridium was supposed to be a network of communications satellites covering the planet. Satellites designed to give internet and phone access to every human on planet earth. The problem: Nobody could afford Iridium. In these examples, Motorola, Apple, and Webvan, all burned through money before they had a steady supply of customers. There is a better way.</p>

<h4>The Four Steps</h4>

<p>Steve Blank lists <em>The Four Steps to the Epiphany</em> as:</p>

<ol>
<li>Customer Discovery</li>
<li>Customer Validation</li>
<li>Customer Creation</li>
<li>Company Building</li>
</ol>


<p>There are a few things to point out about the steps. First the process is iterative, not linear. If at any point we get stuck, we go back and repeat a step (or two) based on what we&#8217;ve learned. A smaller repetition might be termed an iteration. But if the entrepreneur needs to revisit the entire business plan, or change basic assumptions in the business model, the repetition/backtracking would be termed a <em>pivot</em>.</p>

<h4>Customer Discovery and the Minimum Viable Product</h4>

<p>Every entrepreneur has an idea about what customers want. We all know something of the pain felt by our customers, or so we think. Blank&#8217;s suggestion: Take what you know about your prospective customers&#8217; pain and build a minimum viable product (MVP) with just enough features to address the pain. Then get outside the building. Get away from wherever it is that you work and talk to real customers with your MVP in hand. Let them try it. They&#8217;ll give you valuable feedback about what you should do next. If their pain is great enough, and if your MVP is good enough, they&#8217;ll buy it.</p>

<h4>Which Customers?<a href="http://RayHightower.com/images/lifecycle.png" onclick="window.open('/images/lifecycle.png','popup','width=770,height=548,scrollbars=no,resizable=yes,toolbar=no,directories=no,location=no,menubar=no,status=no,left=0,top=0'); return false"><img src="http://RayHightower.com/images/lifecycle_thumb.png" border="0" alt="Technology Adoption Lifecycle, Crossing the Chasm, Geoffrey Moore" name="image" class="right" width="195" height="137" title="Technology Adoption Lifecycle, Crossing the Chasm, Geoffrey Moore" /></a></h4>

<p>It&#8217;s important to note the type of customer we want at this stage. We want early adopters. We want customers who are feeling pain in the entrepreneur&#8217;s area of expertise. Perhaps customers who have tried to solve the problem themselves with no success. Early adopters will give us the most useful &amp; actionable feedback at this stage.</p>

<h4>Customer Validation</h4>

<p>The customer validation step is complete when early adopters buy the product we&#8217;re offering. When customers buy, we know we have a valid product. If they don&#8217;t buy, it might be time to pivot. In this context, <em>pivot</em> means to change the basic assumptions of the business we&#8217;re building. We might change pricing, features, or we might change our entire approach to customers. Many startups go through several pivots before achieving success.</p>

<h4>Customer Creation</h4>

<p>After we&#8217;ve discovered customers, and after we&#8217;ve gone through customer validation, it&#8217;s time to create more customers. Our initial customers were the early adopters and innovators. In the customer creation step, we move beyond our initial customers into the majority. At this point we begin to spend money on marketing.</p>

<h4>Company Building</h4>

<p>After we&#8217;ve gone through the first three customer-oriented steps, we build the company. Now it&#8217;s time to spend money on infrastructure, warehouses, expensive customized software&#8230; anything we need to scale the company as large as we can. Notice that we don&#8217;t try to scale until after we figure out how to develop a steady supply of customers.</p>

<h4>That&#8217;s Not All&#8230;</h4>

<p>We live in a time of continuous &amp; rapid change. Once a business has become successful with <em>The Four Steps</em>, it&#8217;s important to remain watchful for new opportunities. Good companies become great when they execute consistently over time.</p>

<p><em>Note: A version of this post originally appeared on the <a href="http://wisdomgroup.com">WisdomGroup Blog</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Down Is Mandatory]]></title>
    <link href="http://RayHightower.com/blog/2012/08/26/getting-down-is-mandatory/"/>
    <updated>2012-08-26T16:55:00-05:00</updated>
    <id>http://RayHightower.com/blog/2012/08/26/getting-down-is-mandatory</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://RayHightower.com/images/climber.jpg" title="No Shortcuts to the Top by Ed Viesturs" alt="Book cover: No Shortcuts to the Top by Ed Viesturs">
<a href="http://www.charlierose.com/">Charlie Rose</a> is an amazing journalist. His interviews are eclectic and rich. During his interview with mountain climber Ed Viesturs, I was struck by the parallels between mountain climbing and business achievement.</p>

<h4>Managing Risk, Ignoring Critics</h4>

<p>“People say that I’m a very conservative and cautious climber,” says Viesturs. “It’s true, and I’m happy about that because it’s a risky arena and it’s about managing the risk and being smart and being patient. The people who criticize me have no idea what they’re talking about. They’ve never climbed an 8,000-foot peak. So they’re either jealous or bored. My goal is to be alive. And I don’t care about critics.”</p>

<p><em>Business Parallel:</em> Our most successful entrepreneurs press onward in the face of criticism.</p>

<!-- more -->


<h4>Life and Death, Navigating Change</h4>

<p>Climbers operate in an environment where sound preparation and conditioning makes the difference between life and death. True, some unprepared climbers find that they must simply turn around and go back home. On one peak in the Himalayas, <a href="http://en.wikipedia.org/wiki/Annapurna">Annaperna</a>, one out of every two climbers dies while attempting the climb.</p>

<p>Changes in snow conditions and weather are the biggest threats to success. A climber must be very aware of the deadly combination of heavy snow and strong wind: Avalanche conditions. With the right combination of heavy snow and strong wind, a climber moving about in the wrong spot (or any spot) can trigger an avalanche.</p>

<p><em>Business Parallel:</em> Changes in business climate can make the difference between massive success and crushing defeat. It all depends on how well you respond to (or even better, anticipate) change.</p>

<h4>Getting Down is Mandatory</h4>

<p>Along the pathway to success, Viesturs has tasted bitter setbacks. During a climb of Mount Everest, he and his team were 300 feet from the summit. And then he noticed a change in the weather. Conditions were ripe for a potential avalanche. He realized that if the team pressed on to the top of the mountain, they wouldn’t have time to make it down. His trademark phrase came from this experience: “Getting to the summit is optional, getting down is mandatory. It has to be a round trip.” Viesturs and team turned around and they went back home. And they lived to scale Everest another day.</p>

<p><em>Business Parallel:</em> One doesn’t have to bet the company on every new business initiative. Testing takes time, but the wisdom absorbed from test results can increase the odds of success.</p>

<h4>Having the Right Goals</h4>

<p>It’s good to be aggressive about achieving goals. But sometimes we need to shift our goals backwards in favor of human compassion. Viesturs and Rose recounted a story about a climber who lay injured along the pathway toward a mountain peak. Over forty (40) climbers passed the injured climber without offering assistance. Each felt that the climber was so badly injured that he was going to die anyway. Besides, they had goals to achieve.</p>

<p><em>Business Parallel:</em> If you’re a successful entrepreneur and you’re rolling in dough, when was the last time you spent time teaching our youth how to follow in your footsteps?</p>

<h4>Why Climbing Fascinates Us</h4>

<p>Toward the end of the interview, Rose asks, &#8220;What is it about mountain climbing that captures our imagination?&#8221;</p>

<p>Viesturs’ response:</p>

<blockquote><p>It’s about plugging away at something that looks almost impossible. It’s about looking at something from the beginning to an end that seems almost unachievable. And then achieving that end.<br/></p>

<p>When I speak to corporate groups [about achieving a goal], my message is that if you’re passionate about it,<br/>
if you have a good team,<br/>
if you enjoy the process,<br/>
if you break it into steps,<br/>
you can achieve amazing things if you have the patience to do so.<br/></p></blockquote>

<p>Amazing things indeed.</p>

<p><em>Note: A version of this post originally appeared on the <a href="http://wisdomgroup.com">WisdomGroup Blog</a>.</em></p>
]]></content>
  </entry>
  
</feed>
