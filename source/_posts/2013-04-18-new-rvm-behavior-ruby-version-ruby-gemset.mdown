---
layout: post
title: "New RVM Behavior With .ruby-version and .ruby-gemset"
date: 2013-04-18 20:33
comments: true
categories: [Rails, Ruby]
---
I trust [RVM](http://rvm.io) to manage my Ruby versions and my gemsets. So when I saw an unexpected change in RVM's behavior, I was concerned about a possible disruption in my workflow. 
<!--more-->
Here's the message I received:

```bash
~/Code/Ruby/apps$ cd hartl/
You are using '.rvmrc', it requires trusting, it is slower and it is not
compatible with other ruby managers, you can switch to '.ruby-version'
using 'rvm rvmrc to [.]ruby-version' or ignore this warnings with 
'rvm rvmrc warning ignore /Users/rth/Code/Ruby/apps/hartl/.rvmrc', 
'.rvmrc' will continue to be the default project file in RVM 1 and RVM 2,
to ignore the warning for all files run 
'rvm rvmrc warning ignore all .rvmrcs'.

~/Code/Ruby/apps/hartl[master]$
```

My decision: To move go with the flow. If things don't work out, I can always remove RVM completely and start from scratch.

```bash
~/Code/Ruby/apps/hartl[master]$ rvm rvmrc to .ruby-version

```

And now, instead of a single `.rvmrc` file, Ruby versions are managed by
`.ruby-version` while gemsets are managed through `.ruby-gemset`.

Let's see how this works out.
